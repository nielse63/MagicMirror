/* Magic Mirror Config Sample
 *
 * By Michael Teeuw https://michaelteeuw.nl
 * MIT Licensed.
 *
 * For more information on how you can configure this file
 * See https://github.com/MichMich/MagicMirror#configuration
 *
 */
// var path = require("path");

var config = {
  address: "localhost", // Address to listen on, can be:
  // - "localhost", "127.0.0.1", "::1" to listen on loopback interface
  // - another specific IPv4/6 to listen on a specific interface
  // - "0.0.0.0", "::" to listen on any interface
  // Default, when address config is left out or empty, is "localhost"
  port: 8080,
  basePath: "/", // The URL path where MagicMirror is hosted. If you are using a Reverse proxy
  // you must set the sub path here. basePath must end with a /
  // ipWhitelist: ["127.0.0.1", "::ffff:127.0.0.1", "::1", "::ffff:192.168.1.0/28"], // Set [] to allow all IP addresses
  ipWhitelist: ["127.0.0.1", "::ffff:127.0.0.1", "::1"],
  // or add a specific IPv4 of 192.168.1.5 :
  // ["127.0.0.1", "::ffff:127.0.0.1", "::1", "::ffff:192.168.1.5"],
  // or IPv4 range of 192.168.3.0 --> 192.168.3.15 use CIDR format :
  // ["127.0.0.1", "::ffff:127.0.0.1", "::1", "::ffff:192.168.3.0/28"],

  useHttps: false, // Support HTTPS or not, default "false" will use HTTP
  httpsPrivateKey: "", // HTTPS private key path, only require when useHttps is true
  httpsCertificate: "", // HTTPS Certificate path, only require when useHttps is true

  language: "en",
  logLevel: ["INFO", "LOG", "WARN", "ERROR"],
  timeFormat: 12,
  units: "imperial",
  // serverOnly:  true/false/"local" ,
  // local for armv6l processors, default
  //   starts serveronly and then starts chrome browser
  // false, default for all NON-armv6l devices
  // true, force serveronly mode, because you want to.. no UI on this device
  // electronOptions: {
  //   webSecurity: false,
  //   allowRunningInsecureContent: true,
  // },

  modules: [
    // left column
    {
      module: "clock",
      position: "top_left",
    },
    {
      module: "activity",
      position: "bottom_left",
      header: "Activity",
      config: {
        fitbarkToken: "FITBARK_AUTH_TOKEN",
      },
    },

    // right column
    {
      module: "currentweather",
      position: "top_right",
      config: {
        location: "Chicago",
        locationID: "4887398", //ID from http://bulk.openweathermap.org/sample/city.list.json.gz; unzip the gz file and find your city
        appid: "OPENWEATHER_API_KEY",
      },
    },
    {
      module: "weatherforecast",
      position: "top_right",
      header: "Weather Forecast",
      config: {
        location: "Chicago",
        locationID: "4887398", //ID from http://bulk.openweathermap.org/sample/city.list.json.gz; unzip the gz file and find your city
        appid: "OPENWEATHER_API_KEY",
        appendLocationNameToHeader: false,
      },
    },
    {
      module: "MMM-AirQuality",
      position: "bottom_right", // you may choose any location
      header: "Air Quality Index",
      config: {
        location: "usa/illinois/chi_sp/",
        showLocation: false,
      },
    },
    {
      module: "MMM-uv-index",
      position: "bottom_right", // you may choose any location
      header: "UV Index",
      config: {
        lon: -87.650047,
        lat: 41.850029,
        appid: "OPENWEATHER_API_KEY", // openweathermap.org api key
        colors: false,
      },
    },
  ],
};

/*************** DO NOT EDIT THE LINE BELOW ***************/
if (typeof module !== "undefined") {
  module.exports = config;
}
